// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreAPI.Context;

#nullable disable

namespace StoreAPI.Models
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("StoreAPI.Models.clsCategorias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("StoreAPI.Models.clsClientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefonos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("StoreAPI.Models.clsDetalleFacturas", b =>
                {
                    b.Property<int>("DetalleFacturasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<float>("Costo")
                        .HasColumnType("float");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<float>("Precio")
                        .HasColumnType("float");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("DetalleFacturasId");

                    b.HasIndex("FacturaId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetalleFacturas");
                });

            modelBuilder.Entity("StoreAPI.Models.clsFacturas", b =>
                {
                    b.Property<int>("FacturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<float>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("Monto")
                        .HasColumnType("float");

                    b.Property<float>("SubTotal")
                        .HasColumnType("float");

                    b.Property<int>("TipoFacturaId")
                        .HasColumnType("int");

                    b.HasKey("FacturaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoFacturaId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("StoreAPI.Models.clsProductos", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<float>("Costo")
                        .HasColumnType("float");

                    b.Property<float>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("Producto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("StoreAPI.Models.clsTipoFacturas", b =>
                {
                    b.Property<int>("TipoFacturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("TipoFactura")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TipoFacturaId");

                    b.ToTable("TipoFacturas");
                });

            modelBuilder.Entity("StoreAPI.Models.clsDetalleFacturas", b =>
                {
                    b.HasOne("StoreAPI.Models.clsFacturas", "Factura")
                        .WithMany("DetalleFactura")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreAPI.Models.clsProductos", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("StoreAPI.Models.clsFacturas", b =>
                {
                    b.HasOne("StoreAPI.Models.clsClientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreAPI.Models.clsTipoFacturas", "TipoFactura")
                        .WithMany("Invoice")
                        .HasForeignKey("TipoFacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoFactura");
                });

            modelBuilder.Entity("StoreAPI.Models.clsProductos", b =>
                {
                    b.HasOne("StoreAPI.Models.clsCategorias", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("StoreAPI.Models.clsCategorias", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("StoreAPI.Models.clsFacturas", b =>
                {
                    b.Navigation("DetalleFactura");
                });

            modelBuilder.Entity("StoreAPI.Models.clsTipoFacturas", b =>
                {
                    b.Navigation("Invoice");
                });
#pragma warning restore 612, 618
        }
    }
}
